version: '3.8'
services:
    #image: pcic/pdp-local-run
  backend:
    build:
      context: ../..
      dockerfile: ./docker/local-run/Dockerfile
    image: pcic/pdp-local-run
    container_name: pdp-local-run-be
    stdin_open: true
    tty: true
    env_file:
      - common-with-passwords.env
    environment:
      # Specific to backend
      - ORCA_ROOT=http://pdp.localhost:5000/orca
      - APP_MODULE=pdp.wsgi:backend
      - GUNICORN_WORKER_CLASS=gevent
    entrypoint: /codebase/docker/local-run/entrypoint-be.sh
#    ports:
#      - "30446:8000"  # backend
    volumes:
      # This is to enable installing local versions of other packages from
      # your own filesystem. You'll need to update this. Source and target
      # could probably be made environment variables. Or it could be
      # a relative source path and an impersonal target path such as
      # `/local-packages`.
      # - type: bind
      #   source: /home/rglover/code
      #   target: /home/rglover/code
      - type: bind
        source: ../..
        target: /codebase
      # These bindings are for testing the solution but I've had problems with them when attempting
      # to use them in a docker desktop context (They seem to cause the container to hang on startup)
      # Alternatively to binding, if using the .devcontainer you can nfs mount them directly.
      # - /storage/data/climate/downscale:/storage/data/climate/downscale:ro
      # - /storage/data/climate/hydrology:/storage/data/climate/hydrology:ro
      # - /storage/data/climate/observations:/storage/data/climate/observations:ro
      # - /storage/data/climate/PRISM:/storage/data/climate/PRISM:ro
      # - /storage/data/projects/dataportal:/storage/data/projects/dataportal:ro
      # - /storage/data/projects/hydrology:/storage/data/projects/hydrology:ro
      # - /storage/data/projects/PRISM:/storage/data/projects/PRISM:ro



  frontend:
    image: pcic/pdp-local-run
    depends_on:
      - backend
    container_name: pdp-local-run-fe
    stdin_open: true
    tty: true
#    ports:
#      - "30445:8000"  # frontend
    env_file:
      - common-with-passwords.env
    environment:
      # Specific to frontend
      - APP_ROOT=http://pdp.localhost:5000/portal
      - DATA_ROOT=http://pdp.localhost:5000/data
      - APP_MODULE=pdp.wsgi:frontend
      - GEOSERVER_URL=https://tools.pacificclimate.org/geoserver/
      - NCWMS_URL=http://docker-dev02.pcic.uvic.ca:30779/dynamic/x
      - OLD_NCWMS_URL=https://services.pacificclimate.org/ncWMS-PCIC/wms
      - NA_TILES_URL=https://services.pacificclimate.org/dev/mapproxy/service
      # In order to pass environment variables with *content* of the form
      # `${...}` through to JavaScript, the `$` must be escaped as `$$`
      - BC_BASEMAP_URL=https://services.pacificclimate.org/tiles/bc-albers-lite/$${z}/$${x}/$${y}.png
    entrypoint: /codebase/docker/local-run/entrypoint-fe.sh
    volumes:
      # This is to enable installing local versions of other packages from
      # your own filesystem. You'll need to update this. Source and target
      # could probably be made environment variables. Or it could be
      # a relative source path and an impersonal target path such as
      # `/local-packages`.
      # - type: bind
      #   source: /home/rglover/code
      #   target: /home/rglover/code
      - type: bind
        source: ../..
        target: /codebase
      - type: bind
        source: ./prism_demo_config.js
        target: /codebase/pdp/static/js/prism_demo_config.js

  pgbouncer:
    image: edoburu/pgbouncer
    container_name: pgbouncer-dev
    volumes:
    - ./pgbounce_users-with-passwords.txt:/etc/pgbouncer/userlist.txt:ro
    - ./pgbouncer.ini:/etc/pgbouncer/pgbouncer.ini:ro

  proxy:
    image: nginx
    container_name: pdp-dev-proxy
    ports:
      - "5000:80"
    volumes:
      - type: bind
        source: ./nginx.conf
        target: /etc/nginx/nginx.conf
        read_only: true

#networks:
#  default:
#    external:
#      name: pcicbr0
